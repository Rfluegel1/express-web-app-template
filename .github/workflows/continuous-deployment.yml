name: Continuous Deployment and Integration

on:
    push:
      branches:
        - main
    workflow_dispatch: # Manual trigger
    workflow_run:
      workflows: [Update NPM Dependencies and Test]
      types:
        - completed

jobs:
  continuous-deployment:
    runs-on: ubuntu-latest
    env:
      APP_NAME: 'express-web-app-template'
      PASSPORT_SECRET: ${{ secrets.PASSPORT_SECRET }}
      TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
      ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
    timeout-minutes: 10

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: 'password'
          POSTGRES_DB: 'postgres'
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.16.0

      - name: Install frontend dependencies
        working-directory: './frontend'
        run: npm install

      - name: Build Frontend (Development)
        working-directory: './frontend'
        run: npm run build

      - name: Install backend dependencies
        working-directory: './backend'
        run: npm install

      - name: Build Backend
        working-directory: './backend'
        run: npm run build

      - name: Run Backend Tests (Development)
        working-directory: './backend'
        run: npm run test

      - name: Install playwright
        working-directory: './frontend'
        run: npx playwright install

      - name: Run Playwright Tests (Development)
        working-directory: './frontend'
        run: npm run test

      - name: Install Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Staging with Fly
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl auth token $FLY_API_TOKEN
          flyctl deploy -a $APP_NAME

      - name: Run Blackbox Tests (Staging)
        working-directory: './backend'
        run: npm run test:staging

      - name: Run Playwright Tests (Staging)
        working-directory: './frontend'
        run: npm run test:staging
